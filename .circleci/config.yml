version: 2.1
workflows:
  build:
    jobs:
      - build
      - test
jobs:
  build:
    machine: true
    working_directory: ~/typescript-graphql-test
    steps:
      - checkout
      - run:
          name: Install Node Version Manager
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v8.12.0
            nvm alias default v8.12.0
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"" >> $BASH_ENV
      - run:
          name: Start Prisma server
          command: |
            npm install && npm install -g prisma
            docker-compose up -d
            cd prisma
            sleep 20
            prisma deploy
      - run: npm run test
  test:
    docker:
      - image: prismagraphql/prisma:__LATEST_PRISMA_VERSION__
      - image: cimg/node:10.23
      - image: cimg/postgres:10.17
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          POSTGRES_HOST_AUTH_METHOD: "trust"
    environment:
      NODE_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_DB: 123
      POSTGRES_HOST_AUTH_METHOD: "trust"
    steps:
      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "package.json" }}
      - run: npm i prisma
      - run: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package.json" }}
      - run: prisma migrate reset
      - run: prisma migrate dev
      - run: nx serve api
      - run: nx e2e api-e2e
